% Generated by roxygen2 (4.0.2): do not edit by hand
\name{getFreeOption}
\alias{getFreeOption}
\title{Get Generic Option (generic)}
\usage{
getFreeOption(id, where = tryCatch(devtools::as.package(".")$package, error =
  function(cond) {     stop("Invalid default value for `where`") }),
  default = NULL, strict = FALSE, ...)
}
\arguments{
\item{id}{\strong{Signature argument}.
Object containing path-like name/ID information.}

\item{where}{\strong{Signature argument}.
Object containing information about the location of the option container
that is to be used. Typically, this either corresponds to the name/ID
of a package/package project or an instance of a custom class.}

\item{default}{\code{\link{ANY}}.
Value to be returned if option does not exist.
See \code{\link[base]{getOption}}.}

\item{strict}{\code{\link{logical}}.
\code{TRUE}: \code{id} pointing to a non-existing option triggers
error; \code{FALSE}: \code{id} pointing to a non-existing option leads
to return value \code{NULL}.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\description{
Retrieves option from the an option container or
any of it subcontainers based on a path-like identifier
(e.g. \code{"container/subcontainer/option_name"}.
}
\details{
Values for \code{id} are expected to be of structure \code{a/b/c/.../z},
i.e. being a path-like identifier with a slash used as separator.
The identifier is transformed to \code{a$b$c$...$z} and then in turn to a
valid \emph{get} expression (\code{getOptionContainer(...)$a$b$c$...$z}).
}
\examples{
\dontrun{

## Also see examples at `?setFreeOption`
  
##------------------------------------------------------------------------------
## Basics //
##------------------------------------------------------------------------------

container <- initializeOptionContainer(overwrite = TRUE)
setFreeOption(id = "test", value = TRUE)
getFreeOption(id = "test")

setFreeOption(id = "a/b/c", value = 10, gap = TRUE)
getFreeOption(id = "a")
getFreeOption(id = "a/b")
getFreeOption(id = "a/b/c")
  
##------------------------------------------------------------------------------
## Different `where` //
##------------------------------------------------------------------------------

where <- "test"
container <- initializeOptionContainer(id = where, overwrite = TRUE)
setFreeOption(id = "a/b/c", value = 10, where = where, gap = TRUE)
getFreeOption(id = "a/b/c", where = where)

where <- structure(list(id = "test"), class = "OptionContext.Test")
container <- initializeOptionContainer(id = where, overwrite = TRUE)
setFreeOption(id = "a/b/c", value = 10, where = where, gap = TRUE)
getFreeOption(id = "a/b/c", where = where)
  
}
}
\author{
Who to complain to \email{yourfault@somewhere.net}
}
\references{
\url{http://github.com/whotocomplainto/test.package}
}
\seealso{
\code{
  	\link[optionr]{getFreeOption-character-method}
}
}

