% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{setMetaValue,character,ANY,ANY-method}
\alias{setMetaValue,character,ANY,ANY-method}
\alias{setMetaValue-char-any-any-method}
\title{Set Meta Value (char-any-any)}
\usage{
\S4method{setMetaValue}{character,ANY,ANY}(id, value,
  where = tryCatch(devtools::as.package(".")$package, error = function(cond) {
      stop("Invalid default value for `where`") }), must_exist = FALSE,
  typed = FALSE, force = FALSE, gap = FALSE, strict = FALSE,
  reactive = FALSE, ...)
}
\arguments{
\item{id}{\code{\link{character}}.}

\item{value}{\code{\link{ANY}}.}

\item{where}{\code{\link{ANY}}.}

\item{must_exist}{\code{\link{logical}}.
\code{TRUE}: \code{id} pointing to a non-existing option either triggers
an error or results in return value \code{FALSE} (depending on \code{strict});
\code{FALSE}: option that \code{id} points to is set.}

\item{typed}{\code{\link{logical}}.
Implies that \code{must_exist} is automatically set to \code{TRUE}.
\code{TRUE}: \code{class(value)} must match the class of the existing
option value;
\code{FALSE}: option that \code{id} points to is set without class check.}

\item{force}{\code{\link{logical}}.
\code{TRUE}: when \code{dirname(id)} points to a \emph{leaf} instead of a
\emph{branch} (i.e. \code{dirname(id)} is not an \code{environment}),
overwrite it to turn it into a branch;
\code{FALSE}: either return with \code{FALSE} or throw error in such cases
(depending on value of \code{strict});}

\item{gap}{\code{\link{logical}}.
\code{TRUE}: when \code{dirname(id)} points to a non-existing parent
branch or if there are any missing branches in the path tree,
then auto-create all missing branches;
\code{FALSE}: either return with \code{FALSE} or throw error in such cases
(depending on \code{strict});}

\item{strict}{\code{\link{logical}}.
\code{TRUE}: \code{id} pointing to a non-existing option triggers
error; \code{FALSE}: \code{id} pointing to a non-existing option leads
to return value \code{NULL}.}

\item{reactive}{\code{\link{logical}}.
\code{TRUE}: set reactive option via
\code{\link[reactr]{setReactive}} or \code{\link[reactr]{setShinyReactive}}.
\code{FALSE}: set regular/non-reactive option.
Note that if \code{value = reactiveOption()}, \code{reactive} is automatically
set to \code{TRUE}.}
}
\value{
See method
   \code{\link{setMetaValue-char-any-char-method}}.
}
\description{
See generic: \code{\link[optionr]{setMetaValue}}
}
\examples{
\dontrun{

## TODO: add example

}
}
\author{
Who to complain to \email{yourfault@somewhere.net}
}
\references{
\url{http://github.com/whotocomplainto/test.package}
}
\seealso{
\code{
   \link[optionr]{setMetaValue}
}
}

