% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{existsMetaValue,character,missing-method}
\alias{existsMetaValue,character,missing-method}
\alias{existsMetaValue-char-miss-method}
\title{Check Existence of Meta Value (char-miss)}
\usage{
\S4method{existsMetaValue}{character,missing}(id,
  where = tryCatch(devtools::as.package(".")$package, error = function(cond) {
      stop("Invalid default value for `where`") }), default = NULL,
  strict = c(0, 1, 2), ...)
}
\arguments{
\item{id}{\code{\link{character}}.}

\item{where}{\code{\link{missing}}.}

\item{default}{\code{\link{ANY}}.
Value to be returned if option does not exist.
See \code{\link[base]{getOption}} and \code{\link[nestr]{getNested}}.}

\item{strict}{\code{\link{logical}}.
 Controls what happens when \code{id} points to a non-existing meta object:
\itemize{
     \item{0: }{ignore and return \code{FALSE} to signal that the
             assignment process was not successful or \code{fail_value} depending
             on the value of \code{return_status}}
         \item{1: }{ignore and with warning and return \code{FALSE}}
         \item{2: }{ignore and with error}
   }}

\item{...}{Further arguments to be passed to subsequent functions/methods.}
}
\value{
See method
   \code{\link[optionr]{existsMetaValue-char-char-method}}
}
\description{
See generic: \code{\link[optionr]{existsMetaValue}}
}
\examples{
\dontrun{

##------------------------------------------------------------------------------
## Basics //
##------------------------------------------------------------------------------

setMetaValue(id = "test", value = TRUE)
existsMetaValue(id = "test")

setMetaValue(id = "a/b/c", value = 10)
existsMetaValue(id = "a")
existsMetaValue(id = "a/b")
existsMetaValue(id = "a/b/c")
existsMetaValue(id = "a/b/c/d")

existsMetaValue(id = "c")
existsMetaValue(id = "c/d/e")
  
##------------------------------------------------------------------------------
## Strictness levels //
##------------------------------------------------------------------------------

## Empty ID //
existsMetaValue(id = character())
try(existsMetaValue(id = character(), strict = 1))
try(existsMetaValue(id = character(), strict = 2))

## Not-existing //  
existsMetaValue(id = "c/d/e")
try(existsMetaValue(id = "c/d/e", strict = 1))
try(existsMetaValue(id = "c/d/e", strict = 2))

##------------------------------------------------------------------------------
## Explicit `where` //
##------------------------------------------------------------------------------

where <- new.env()
setMetaValue(id = "a/b/c", value = 10, where = where)
existsMetaValue(id = "a/b/c", where = where)
existsMetaValue(id = "a/b/c/d", where = where)
existsMetaValue(id = "c/d/e", where = where)

}
}
\author{
Janko Thyson \email{janko.thyson@gmail.com}
}
\references{
\url{http://github.com/Rappster/optionr}
}
\seealso{
\code{
   \link[optionr]{existsMetaValue}
}
}

