% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{getOptionContainer,ANY-method}
\alias{getOptionContainer,ANY-method}
\title{Ensure Option Container (any-miss)}
\usage{

  \S4method{getOptionContainer}{ANY}(id = tryCatch(devtools::as.package(".")$package,
  error = function(cond) {     stop("Invalid default value for `id`") }),
  hidden = TRUE, ...)


  \S4method{getOptionContainer}{ANY}(id = tryCatch(devtools::as.package(".")$package,
  error = function(cond) {     stop("Invalid default value for `id`") }),
  hidden = TRUE, ...)
}
\arguments{
\item{id}{\code{\link{ANY}}.}

\item{hidden}{\code{\link{logical}}.
\code{TRUE}: make sure name/ID information in \code{id}
is preprended with a dot as the container was assigned with \code{hidden = TRUE};
\code{FALSE}: use name/ID information in \code{id} as is.}

\item{...}{Further arguments to be passed to subsequent functions/methods.}

\item{id}{\code{\link{ANY}}.}
}
\value{
\code{\link{logical}}. \code{TRUE}.

\code{\link{logical}}. \code{TRUE}.
}
\description{
See generic: \code{\link[rapp]{getOptionContainer}}

See generic: \code{\link[rapp]{getOptionContainer}}
}
\examples{
\dontrun{

##------------------------------------------------------------------------------
## Default `id` //
##------------------------------------------------------------------------------

res <- ensureOptionContainer(overwrite = TRUE)
identical(getOptionContainer(), res)
options(".optionr" = NULL)
  
##------------------------------------------------------------------------------
## Hidden //
##------------------------------------------------------------------------------

res <- ensureOptionContainer(hidden = FALSE, overwrite = TRUE)
identical(getOptionContainer(hidden = FALSE), res)
options("optionr" = NULL)
  
##------------------------------------------------------------------------------
## As interface //
##------------------------------------------------------------------------------
  
id <- structure(list(id = "test"), class = "OptionContext.Test")
res <- ensureOptionContainer(id, hidden = FALSE, overwrite = TRUE)
identical(getOptionContainer(id, hidden = FALSE), res)
options("test" = NULL)
  
}
\dontrun{

##------------------------------------------------------------------------------
## Default `id` //
##------------------------------------------------------------------------------

res <- ensureOptionContainer(overwrite = TRUE)
identical(getOptionContainer(), res)
options(".optionr" = NULL)
  
##------------------------------------------------------------------------------
## Hidden //
##------------------------------------------------------------------------------

res <- ensureOptionContainer(hidden = FALSE, overwrite = TRUE)
identical(getOptionContainer(hidden = FALSE), res)
options("optionr" = NULL)
  
##------------------------------------------------------------------------------
## As interface //
##------------------------------------------------------------------------------
  
id <- structure(list(id = "test"), class = "OptionContext.Test")
res <- ensureOptionContainer(id, hidden = FALSE, overwrite = TRUE)
identical(getOptionContainer(id, hidden = FALSE), res)
options("test" = NULL)
  
}
}
\author{
Who to complain to \email{yourfault@somewhere.net}

Who to complain to \email{yourfault@somewhere.net}
}
\references{
\url{http://github.com/whotocomplainto/test.package}

\url{http://github.com/whotocomplainto/test.package}
}
\seealso{
\code{
   \link[rapp]{getOptionContainer}
}

\code{
   \link[rapp]{getOptionContainer}
}
}

